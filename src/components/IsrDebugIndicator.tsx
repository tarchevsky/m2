'use client'

import { formatGenerationTime, recordGenerationTime } from '@/utils/isr-helpers'
import { useEffect, useState } from 'react'

/**
 * –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –≤—Ä–µ–º–µ–Ω–∏ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ —Å—Ç—Ä–∞–Ω–∏—Ü—ã
 * –ü–æ–ª–µ–∑–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Ä–∞–±–æ—Ç—ã ISR
 */
export default function IsrDebugIndicator({
  pageId,
  className = 'p-2 bg-gray-100 text-xs text-gray-600',
  showOnlyInDevelopment = true,
}: {
  pageId: string
  className?: string
  showOnlyInDevelopment?: boolean
}) {
  const [timestamp, setTimestamp] = useState<string>('')

  useEffect(() => {
    // –ù–∞ –∫–ª–∏–µ–Ω—Ç–µ –∑–∞–ø–∏—Å—ã–≤–∞–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏
    const generationTime = recordGenerationTime(pageId)
    setTimestamp(formatGenerationTime(generationTime))

    // –°–æ–∑–¥–∞–µ–º —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω—Å–æ–ª–∏ –±—Ä–∞—É–∑–µ—Ä–∞ –¥–ª—è —É–¥–æ–±—Å—Ç–≤–∞ –æ—Ç–ª–∞–¥–∫–∏
    console.group('ISR Debug Info')
    console.log(`–°—Ç—Ä–∞–Ω–∏—Ü–∞: ${pageId}`)
    console.log(`–í—Ä–µ–º—è –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏: ${generationTime}`)
    console.log(`Formatted: ${formatGenerationTime(generationTime)}`)
    console.groupEnd()
  }, [pageId])

  // –ù–µ –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –≤ production, –µ—Å–ª–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω —Ñ–ª–∞–≥
  if (showOnlyInDevelopment && process.env.NODE_ENV !== 'development') {
    return null
  }

  return (
    <div className={className}>
      <span>üîÑ –°—Ç—Ä–∞–Ω–∏—Ü–∞ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞: {timestamp}</span>
    </div>
  )
}
